# services:
#   web:
#     build: requirements/composetest/
#     ports:
#       - "8000:5000"
#     develop:
#       watch:
#         - action: sync
#           path: requirements/composetest/
#           target: /code
#   redis:
#     image: "redis:alpine"

services:
  mariadb:
    build: requirements/mariadb/.
    container_name: mariadb
    restart: always
    env_file:
     - .env
    networks:
      - wp-db
      - adminer-db
    volumes:
      - db-data:/var/lib/mysql
    secrets:
      - db_user_pwd
      - db_root_pwd

  nginx:
    build: requirements/nginx/.
    container_name: nginx
    restart: always
    init: true
    env_file:
      - .env
    ports:
      - "443:443"
    networks:
      - wp-site
      - s-site
      - adminer-site
      - mail-server
    depends_on:
      - wordpress
      - mariadb
    volumes:
      - www-data:/var/www/html/

  wordpress:
    build: requirements/wordpress/.
    container_name: wordpress
    restart: always
    env_file:
      - .env
    networks:
      - wp-site
      - wp-db
    volumes:
      - www-data:/var/www/html
    depends_on:
      - mariadb
      - redis
    secrets:
      - wp_user_pwd
      - wp_admin_pwd
      - db_user_pwd

  redis:
    container_name: redis
    build: requirements/bonus/redis/.
    networks:
      - wp-site
    restart: always

  static-site:
    container_name: static-site
    build: requirements/bonus/static-site/.
    restart: always
    networks:
      - s-site
      - mail-server


  ftp:
    build: requirements/bonus/ftp/.
    container_name: ftp
    restart: always
    env_file:
      - .env
    networks:
      - wp-site
    volumes:
      - www-data:/var/www/html:rw
    depends_on:
      wordpress:
        condition: service_started #healthy
    ports:
      - "21:21"

  adminer:
      build: requirements/bonus/adminer/.
      container_name: adminer
      depends_on:
        - mariadb 
      restart: always
      networks:
        - adminer-db
        - adminer-site
    
  mailhog:
    build: requirements/bonus/mailhog/.
    container_name: mailhog
    depends_on:
      - static-site
    restart: always
    env_file:
      - .env
    networks:
      - mail-server
    volumes:
      - mailhog-data:/data
      # data = path inside the container
    # ports:
    #   - "8025:8025"
    #   - "1025:1025"
    environment:
        # - MP_DATA_FILE=/data/mailpit.db
        # - MP_MAX_MESSAGES=500
        # - MP_SMTP_AUTH_ACCEPT_ANY=1
        # - MP_SMTP_AUTH_ALLOW_INSECURE=1
        # - MP_WEBROOT=/portfolio/mailhog
      - MH_STORAGE=maildir
      - MH_MAILDIR_PATH=/data

  mailer-api:
    build: requirements/bonus/mailer-api/.
    container_name: mailer-api
    depends_on:
      - static-site
      - mailhog
    restart: always
    env_file:
      - .env
    networks:
      - mail-server

networks:
  wp-site:
    driver: bridge
  wp-db:
    driver: bridge
  s-site:
    driver: bridge
  adminer-db:
    driver: bridge
  adminer-site:
    driver: bridge
  mail-server:
    driver: bridge

secrets:
  wp_user_pwd:
    file: ../secrets/wp_user_pwd.txt
  wp_admin_pwd:
    file: ../secrets/wp_admin_pwd.txt
  db_user_pwd:
    file: ../secrets/db_user_pwd.txt
  db_root_pwd:
    file: ../secrets/db_root_pwd.txt

volumes:
  www-data:
    driver_opts:
      type: local
      device: ${HOME}/data/www-data
      o: bind
  db-data:
    driver_opts:
      type: none
      device: ${HOME}/data/db-data
      o: bind
  mailhog-data:
     driver_opts:
      type: none
      device: ${HOME}/data/mailhog-data
      o: bind 

